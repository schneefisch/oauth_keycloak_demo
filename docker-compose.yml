version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
    image: backend-service:latest
    container_name: backend-service
    ports:
      - "8082:8080"
    environment:
      - PORT=8080
      - KEYCLOAK_URL=http://keycloak:8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=events_user
      - DB_PASSWORD=events_password
      - DB_NAME=events_demo
      - DB_SCHEMA=events
      - CLIENT_ID=events-api
      - CLIENT_SECRET=g4dHiyKz7TMX4zLkopxrr45q8J9fZzO6
    depends_on:
      - keycloak
      - postgres
    networks:
      - app-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
    image: frontend:latest
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  # Keycloak service
  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    container_name: keycloak
    ports:
      - "8081:8080"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=bad-password
      - KEYCLOAK_EXTRA_ARGS=--import-realm --start-dev
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/events_demo
      - KC_DB_SCHEMA=keycloak
      - KC_DB_USERNAME=keycloak_user
      - KC_DB_PASSWORD=keycloak_password
      - KC_FEATURES=scripts
    volumes:
      - ./data/import:/opt/keycloak/data/import
    depends_on:
      - postgres
    networks:
      - app-network
    entrypoint: /opt/keycloak/bin/kc.sh start-dev --import-realm --features=scripts

  # PostgreSQL for Keycloak
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Q6uktXCjQ
      - POSTGRES_DB=events_demo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/db/01-create-events-schema.sql:/docker-entrypoint-initdb.d/01-create-events-schema.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
